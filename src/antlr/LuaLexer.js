// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,67,575,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,1,0,1,0,1,
1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,
5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,
15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,
21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,35,1,35,
1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,
40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,
1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,
52,1,53,1,53,1,54,1,54,1,55,1,55,5,55,347,8,55,10,55,12,55,350,9,55,1,56,
1,56,1,56,5,56,355,8,56,10,56,12,56,358,9,56,1,56,1,56,1,57,1,57,1,57,5,
57,365,8,57,10,57,12,57,368,9,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,
1,59,1,59,1,59,1,59,5,59,382,8,59,10,59,12,59,385,9,59,1,59,3,59,388,8,59,
1,60,4,60,391,8,60,11,60,12,60,392,1,61,1,61,1,61,4,61,398,8,61,11,61,12,
61,399,1,62,4,62,403,8,62,11,62,12,62,404,1,62,1,62,5,62,409,8,62,10,62,
12,62,412,9,62,1,62,3,62,415,8,62,1,62,1,62,4,62,419,8,62,11,62,12,62,420,
1,62,3,62,424,8,62,1,62,4,62,427,8,62,11,62,12,62,428,1,62,1,62,3,62,433,
8,62,1,63,1,63,1,63,4,63,438,8,63,11,63,12,63,439,1,63,1,63,5,63,444,8,63,
10,63,12,63,447,9,63,1,63,3,63,450,8,63,1,63,1,63,1,63,1,63,4,63,456,8,63,
11,63,12,63,457,1,63,3,63,461,8,63,1,63,1,63,1,63,4,63,466,8,63,11,63,12,
63,467,1,63,1,63,3,63,472,8,63,1,64,1,64,3,64,476,8,64,1,64,4,64,479,8,64,
11,64,12,64,480,1,65,1,65,3,65,485,8,65,1,65,4,65,488,8,65,11,65,12,65,489,
1,66,1,66,1,66,1,66,3,66,496,8,66,1,66,1,66,1,66,1,66,3,66,502,8,66,1,67,
1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,3,67,515,8,67,1,68,1,68,
1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,4,69,527,8,69,11,69,12,69,528,1,
69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,
1,73,1,73,1,74,1,74,1,74,1,74,5,74,552,8,74,10,74,12,74,555,9,74,1,74,1,
74,1,75,4,75,560,8,75,11,75,12,75,561,1,75,1,75,1,76,1,76,1,76,5,76,569,
8,76,10,76,12,76,572,9,76,1,76,1,76,1,383,0,77,1,1,3,2,5,3,7,4,9,5,11,6,
13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,
109,55,111,56,113,57,115,58,117,59,119,0,121,60,123,61,125,62,127,63,129,
0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,64,149,65,151,66,153,
67,1,0,14,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,
92,92,2,0,39,39,92,92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,43,45,45,
2,0,80,80,112,112,11,0,34,36,39,39,92,92,97,98,102,102,110,110,114,114,116,
116,118,118,122,122,124,124,1,0,48,50,1,0,48,57,3,0,48,57,65,70,97,102,4,
0,10,10,13,13,133,133,8232,8233,3,0,9,10,12,13,32,32,604,0,1,1,0,0,0,0,3,
1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,
71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,
0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
0,115,1,0,0,0,0,117,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
127,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,1,155,
1,0,0,0,3,157,1,0,0,0,5,159,1,0,0,0,7,165,1,0,0,0,9,170,1,0,0,0,11,173,1,
0,0,0,13,177,1,0,0,0,15,183,1,0,0,0,17,190,1,0,0,0,19,196,1,0,0,0,21,199,
1,0,0,0,23,204,1,0,0,0,25,211,1,0,0,0,27,216,1,0,0,0,29,220,1,0,0,0,31,222,
1,0,0,0,33,225,1,0,0,0,35,234,1,0,0,0,37,240,1,0,0,0,39,247,1,0,0,0,41,250,
1,0,0,0,43,252,1,0,0,0,45,254,1,0,0,0,47,258,1,0,0,0,49,264,1,0,0,0,51,269,
1,0,0,0,53,273,1,0,0,0,55,275,1,0,0,0,57,277,1,0,0,0,59,279,1,0,0,0,61,281,
1,0,0,0,63,283,1,0,0,0,65,285,1,0,0,0,67,288,1,0,0,0,69,292,1,0,0,0,71,294,
1,0,0,0,73,296,1,0,0,0,75,299,1,0,0,0,77,302,1,0,0,0,79,305,1,0,0,0,81,308,
1,0,0,0,83,311,1,0,0,0,85,313,1,0,0,0,87,315,1,0,0,0,89,317,1,0,0,0,91,319,
1,0,0,0,93,321,1,0,0,0,95,324,1,0,0,0,97,326,1,0,0,0,99,328,1,0,0,0,101,
330,1,0,0,0,103,333,1,0,0,0,105,336,1,0,0,0,107,340,1,0,0,0,109,342,1,0,
0,0,111,344,1,0,0,0,113,351,1,0,0,0,115,361,1,0,0,0,117,371,1,0,0,0,119,
387,1,0,0,0,121,390,1,0,0,0,123,394,1,0,0,0,125,432,1,0,0,0,127,471,1,0,
0,0,129,473,1,0,0,0,131,482,1,0,0,0,133,501,1,0,0,0,135,514,1,0,0,0,137,
516,1,0,0,0,139,521,1,0,0,0,141,532,1,0,0,0,143,534,1,0,0,0,145,536,1,0,
0,0,147,538,1,0,0,0,149,547,1,0,0,0,151,559,1,0,0,0,153,565,1,0,0,0,155,
156,5,59,0,0,156,2,1,0,0,0,157,158,5,61,0,0,158,4,1,0,0,0,159,160,5,98,0,
0,160,161,5,114,0,0,161,162,5,101,0,0,162,163,5,97,0,0,163,164,5,107,0,0,
164,6,1,0,0,0,165,166,5,103,0,0,166,167,5,111,0,0,167,168,5,116,0,0,168,
169,5,111,0,0,169,8,1,0,0,0,170,171,5,100,0,0,171,172,5,111,0,0,172,10,1,
0,0,0,173,174,5,101,0,0,174,175,5,110,0,0,175,176,5,100,0,0,176,12,1,0,0,
0,177,178,5,119,0,0,178,179,5,104,0,0,179,180,5,105,0,0,180,181,5,108,0,
0,181,182,5,101,0,0,182,14,1,0,0,0,183,184,5,114,0,0,184,185,5,101,0,0,185,
186,5,112,0,0,186,187,5,101,0,0,187,188,5,97,0,0,188,189,5,116,0,0,189,16,
1,0,0,0,190,191,5,117,0,0,191,192,5,110,0,0,192,193,5,116,0,0,193,194,5,
105,0,0,194,195,5,108,0,0,195,18,1,0,0,0,196,197,5,105,0,0,197,198,5,102,
0,0,198,20,1,0,0,0,199,200,5,116,0,0,200,201,5,104,0,0,201,202,5,101,0,0,
202,203,5,110,0,0,203,22,1,0,0,0,204,205,5,101,0,0,205,206,5,108,0,0,206,
207,5,115,0,0,207,208,5,101,0,0,208,209,5,105,0,0,209,210,5,102,0,0,210,
24,1,0,0,0,211,212,5,101,0,0,212,213,5,108,0,0,213,214,5,115,0,0,214,215,
5,101,0,0,215,26,1,0,0,0,216,217,5,102,0,0,217,218,5,111,0,0,218,219,5,114,
0,0,219,28,1,0,0,0,220,221,5,44,0,0,221,30,1,0,0,0,222,223,5,105,0,0,223,
224,5,110,0,0,224,32,1,0,0,0,225,226,5,102,0,0,226,227,5,117,0,0,227,228,
5,110,0,0,228,229,5,99,0,0,229,230,5,116,0,0,230,231,5,105,0,0,231,232,5,
111,0,0,232,233,5,110,0,0,233,34,1,0,0,0,234,235,5,108,0,0,235,236,5,111,
0,0,236,237,5,99,0,0,237,238,5,97,0,0,238,239,5,108,0,0,239,36,1,0,0,0,240,
241,5,114,0,0,241,242,5,101,0,0,242,243,5,116,0,0,243,244,5,117,0,0,244,
245,5,114,0,0,245,246,5,110,0,0,246,38,1,0,0,0,247,248,5,58,0,0,248,249,
5,58,0,0,249,40,1,0,0,0,250,251,5,46,0,0,251,42,1,0,0,0,252,253,5,58,0,0,
253,44,1,0,0,0,254,255,5,110,0,0,255,256,5,105,0,0,256,257,5,108,0,0,257,
46,1,0,0,0,258,259,5,102,0,0,259,260,5,97,0,0,260,261,5,108,0,0,261,262,
5,115,0,0,262,263,5,101,0,0,263,48,1,0,0,0,264,265,5,116,0,0,265,266,5,114,
0,0,266,267,5,117,0,0,267,268,5,101,0,0,268,50,1,0,0,0,269,270,5,46,0,0,
270,271,5,46,0,0,271,272,5,46,0,0,272,52,1,0,0,0,273,274,5,40,0,0,274,54,
1,0,0,0,275,276,5,41,0,0,276,56,1,0,0,0,277,278,5,91,0,0,278,58,1,0,0,0,
279,280,5,93,0,0,280,60,1,0,0,0,281,282,5,123,0,0,282,62,1,0,0,0,283,284,
5,125,0,0,284,64,1,0,0,0,285,286,5,111,0,0,286,287,5,114,0,0,287,66,1,0,
0,0,288,289,5,97,0,0,289,290,5,110,0,0,290,291,5,100,0,0,291,68,1,0,0,0,
292,293,5,60,0,0,293,70,1,0,0,0,294,295,5,62,0,0,295,72,1,0,0,0,296,297,
5,60,0,0,297,298,5,61,0,0,298,74,1,0,0,0,299,300,5,62,0,0,300,301,5,61,0,
0,301,76,1,0,0,0,302,303,5,126,0,0,303,304,5,61,0,0,304,78,1,0,0,0,305,306,
5,61,0,0,306,307,5,61,0,0,307,80,1,0,0,0,308,309,5,46,0,0,309,310,5,46,0,
0,310,82,1,0,0,0,311,312,5,43,0,0,312,84,1,0,0,0,313,314,5,45,0,0,314,86,
1,0,0,0,315,316,5,42,0,0,316,88,1,0,0,0,317,318,5,47,0,0,318,90,1,0,0,0,
319,320,5,37,0,0,320,92,1,0,0,0,321,322,5,47,0,0,322,323,5,47,0,0,323,94,
1,0,0,0,324,325,5,38,0,0,325,96,1,0,0,0,326,327,5,124,0,0,327,98,1,0,0,0,
328,329,5,126,0,0,329,100,1,0,0,0,330,331,5,60,0,0,331,332,5,60,0,0,332,
102,1,0,0,0,333,334,5,62,0,0,334,335,5,62,0,0,335,104,1,0,0,0,336,337,5,
110,0,0,337,338,5,111,0,0,338,339,5,116,0,0,339,106,1,0,0,0,340,341,5,35,
0,0,341,108,1,0,0,0,342,343,5,94,0,0,343,110,1,0,0,0,344,348,7,0,0,0,345,
347,7,1,0,0,346,345,1,0,0,0,347,350,1,0,0,0,348,346,1,0,0,0,348,349,1,0,
0,0,349,112,1,0,0,0,350,348,1,0,0,0,351,356,5,34,0,0,352,355,3,133,66,0,
353,355,8,2,0,0,354,352,1,0,0,0,354,353,1,0,0,0,355,358,1,0,0,0,356,354,
1,0,0,0,356,357,1,0,0,0,357,359,1,0,0,0,358,356,1,0,0,0,359,360,5,34,0,0,
360,114,1,0,0,0,361,366,5,39,0,0,362,365,3,133,66,0,363,365,8,3,0,0,364,
362,1,0,0,0,364,363,1,0,0,0,365,368,1,0,0,0,366,364,1,0,0,0,366,367,1,0,
0,0,367,369,1,0,0,0,368,366,1,0,0,0,369,370,5,39,0,0,370,116,1,0,0,0,371,
372,5,91,0,0,372,373,3,119,59,0,373,374,5,93,0,0,374,118,1,0,0,0,375,376,
5,61,0,0,376,377,3,119,59,0,377,378,5,61,0,0,378,388,1,0,0,0,379,383,5,91,
0,0,380,382,9,0,0,0,381,380,1,0,0,0,382,385,1,0,0,0,383,384,1,0,0,0,383,
381,1,0,0,0,384,386,1,0,0,0,385,383,1,0,0,0,386,388,5,93,0,0,387,375,1,0,
0,0,387,379,1,0,0,0,388,120,1,0,0,0,389,391,3,141,70,0,390,389,1,0,0,0,391,
392,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,122,1,0,0,0,394,395,5,48,
0,0,395,397,7,4,0,0,396,398,3,143,71,0,397,396,1,0,0,0,398,399,1,0,0,0,399,
397,1,0,0,0,399,400,1,0,0,0,400,124,1,0,0,0,401,403,3,141,70,0,402,401,1,
0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,406,1,0,0,0,406,
410,5,46,0,0,407,409,3,141,70,0,408,407,1,0,0,0,409,412,1,0,0,0,410,408,
1,0,0,0,410,411,1,0,0,0,411,414,1,0,0,0,412,410,1,0,0,0,413,415,3,129,64,
0,414,413,1,0,0,0,414,415,1,0,0,0,415,433,1,0,0,0,416,418,5,46,0,0,417,419,
3,141,70,0,418,417,1,0,0,0,419,420,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,
0,421,423,1,0,0,0,422,424,3,129,64,0,423,422,1,0,0,0,423,424,1,0,0,0,424,
433,1,0,0,0,425,427,3,141,70,0,426,425,1,0,0,0,427,428,1,0,0,0,428,426,1,
0,0,0,428,429,1,0,0,0,429,430,1,0,0,0,430,431,3,129,64,0,431,433,1,0,0,0,
432,402,1,0,0,0,432,416,1,0,0,0,432,426,1,0,0,0,433,126,1,0,0,0,434,435,
5,48,0,0,435,437,7,4,0,0,436,438,3,143,71,0,437,436,1,0,0,0,438,439,1,0,
0,0,439,437,1,0,0,0,439,440,1,0,0,0,440,441,1,0,0,0,441,445,5,46,0,0,442,
444,3,143,71,0,443,442,1,0,0,0,444,447,1,0,0,0,445,443,1,0,0,0,445,446,1,
0,0,0,446,449,1,0,0,0,447,445,1,0,0,0,448,450,3,131,65,0,449,448,1,0,0,0,
449,450,1,0,0,0,450,472,1,0,0,0,451,452,5,48,0,0,452,453,7,4,0,0,453,455,
5,46,0,0,454,456,3,143,71,0,455,454,1,0,0,0,456,457,1,0,0,0,457,455,1,0,
0,0,457,458,1,0,0,0,458,460,1,0,0,0,459,461,3,131,65,0,460,459,1,0,0,0,460,
461,1,0,0,0,461,472,1,0,0,0,462,463,5,48,0,0,463,465,7,4,0,0,464,466,3,143,
71,0,465,464,1,0,0,0,466,467,1,0,0,0,467,465,1,0,0,0,467,468,1,0,0,0,468,
469,1,0,0,0,469,470,3,131,65,0,470,472,1,0,0,0,471,434,1,0,0,0,471,451,1,
0,0,0,471,462,1,0,0,0,472,128,1,0,0,0,473,475,7,5,0,0,474,476,7,6,0,0,475,
474,1,0,0,0,475,476,1,0,0,0,476,478,1,0,0,0,477,479,3,141,70,0,478,477,1,
0,0,0,479,480,1,0,0,0,480,478,1,0,0,0,480,481,1,0,0,0,481,130,1,0,0,0,482,
484,7,7,0,0,483,485,7,6,0,0,484,483,1,0,0,0,484,485,1,0,0,0,485,487,1,0,
0,0,486,488,3,141,70,0,487,486,1,0,0,0,488,489,1,0,0,0,489,487,1,0,0,0,489,
490,1,0,0,0,490,132,1,0,0,0,491,492,5,92,0,0,492,502,7,8,0,0,493,495,5,92,
0,0,494,496,5,13,0,0,495,494,1,0,0,0,495,496,1,0,0,0,496,497,1,0,0,0,497,
502,5,10,0,0,498,502,3,135,67,0,499,502,3,137,68,0,500,502,3,139,69,0,501,
491,1,0,0,0,501,493,1,0,0,0,501,498,1,0,0,0,501,499,1,0,0,0,501,500,1,0,
0,0,502,134,1,0,0,0,503,504,5,92,0,0,504,515,3,141,70,0,505,506,5,92,0,0,
506,507,3,141,70,0,507,508,3,141,70,0,508,515,1,0,0,0,509,510,5,92,0,0,510,
511,7,9,0,0,511,512,3,141,70,0,512,513,3,141,70,0,513,515,1,0,0,0,514,503,
1,0,0,0,514,505,1,0,0,0,514,509,1,0,0,0,515,136,1,0,0,0,516,517,5,92,0,0,
517,518,5,120,0,0,518,519,3,143,71,0,519,520,3,143,71,0,520,138,1,0,0,0,
521,522,5,92,0,0,522,523,5,117,0,0,523,524,5,123,0,0,524,526,1,0,0,0,525,
527,3,143,71,0,526,525,1,0,0,0,527,528,1,0,0,0,528,526,1,0,0,0,528,529,1,
0,0,0,529,530,1,0,0,0,530,531,5,125,0,0,531,140,1,0,0,0,532,533,7,10,0,0,
533,142,1,0,0,0,534,535,7,11,0,0,535,144,1,0,0,0,536,537,8,12,0,0,537,146,
1,0,0,0,538,539,5,45,0,0,539,540,5,45,0,0,540,541,5,91,0,0,541,542,1,0,0,
0,542,543,3,119,59,0,543,544,5,93,0,0,544,545,1,0,0,0,545,546,6,73,0,0,546,
148,1,0,0,0,547,548,5,45,0,0,548,549,5,45,0,0,549,553,1,0,0,0,550,552,3,
145,72,0,551,550,1,0,0,0,552,555,1,0,0,0,553,551,1,0,0,0,553,554,1,0,0,0,
554,556,1,0,0,0,555,553,1,0,0,0,556,557,6,74,0,0,557,150,1,0,0,0,558,560,
7,13,0,0,559,558,1,0,0,0,560,561,1,0,0,0,561,559,1,0,0,0,561,562,1,0,0,0,
562,563,1,0,0,0,563,564,6,75,1,0,564,152,1,0,0,0,565,566,5,35,0,0,566,570,
5,33,0,0,567,569,3,145,72,0,568,567,1,0,0,0,569,572,1,0,0,0,570,568,1,0,
0,0,570,571,1,0,0,0,571,573,1,0,0,0,572,570,1,0,0,0,573,574,6,76,0,0,574,
154,1,0,0,0,35,0,348,354,356,364,366,383,387,392,399,404,410,414,420,423,
428,432,439,445,449,457,460,467,471,475,480,484,489,495,501,514,528,553,
561,570,2,0,1,0,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LuaLexer extends antlr4.Lexer {

    static grammarFileName = "Lua.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'='", "'break'", "'goto'", "'do'", 
                         "'end'", "'while'", "'repeat'", "'until'", "'if'", 
                         "'then'", "'elseif'", "'else'", "'for'", "','", 
                         "'in'", "'function'", "'local'", "'return'", "'::'", 
                         "'.'", "':'", "'nil'", "'false'", "'true'", "'...'", 
                         "'('", "')'", "'['", "']'", "'{'", "'}'", "'or'", 
                         "'and'", "'<'", "'>'", "'<='", "'>='", "'~='", 
                         "'=='", "'..'", "'+'", "'-'", "'*'", "'/'", "'%'", 
                         "'//'", "'&'", "'|'", "'~'", "'<<'", "'>>'", "'not'", 
                         "'#'", "'^'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "NAME", "NORMALSTRING", "CHARSTRING", "LONGSTRING", 
                          "INT", "HEX", "FLOAT", "HEX_FLOAT", "COMMENT", 
                          "LINE_COMMENT", "WS", "SHEBANG" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "NAME", "NORMALSTRING", "CHARSTRING", "LONGSTRING", 
                      "NESTED_STR", "INT", "HEX", "FLOAT", "HEX_FLOAT", 
                      "ExponentPart", "HexExponentPart", "EscapeSequence", 
                      "DecimalEscape", "HexEscape", "UtfEscape", "Digit", 
                      "HexDigit", "SingleLineInputCharacter", "COMMENT", 
                      "LINE_COMMENT", "WS", "SHEBANG" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

LuaLexer.EOF = antlr4.Token.EOF;
LuaLexer.T__0 = 1;
LuaLexer.T__1 = 2;
LuaLexer.T__2 = 3;
LuaLexer.T__3 = 4;
LuaLexer.T__4 = 5;
LuaLexer.T__5 = 6;
LuaLexer.T__6 = 7;
LuaLexer.T__7 = 8;
LuaLexer.T__8 = 9;
LuaLexer.T__9 = 10;
LuaLexer.T__10 = 11;
LuaLexer.T__11 = 12;
LuaLexer.T__12 = 13;
LuaLexer.T__13 = 14;
LuaLexer.T__14 = 15;
LuaLexer.T__15 = 16;
LuaLexer.T__16 = 17;
LuaLexer.T__17 = 18;
LuaLexer.T__18 = 19;
LuaLexer.T__19 = 20;
LuaLexer.T__20 = 21;
LuaLexer.T__21 = 22;
LuaLexer.T__22 = 23;
LuaLexer.T__23 = 24;
LuaLexer.T__24 = 25;
LuaLexer.T__25 = 26;
LuaLexer.T__26 = 27;
LuaLexer.T__27 = 28;
LuaLexer.T__28 = 29;
LuaLexer.T__29 = 30;
LuaLexer.T__30 = 31;
LuaLexer.T__31 = 32;
LuaLexer.T__32 = 33;
LuaLexer.T__33 = 34;
LuaLexer.T__34 = 35;
LuaLexer.T__35 = 36;
LuaLexer.T__36 = 37;
LuaLexer.T__37 = 38;
LuaLexer.T__38 = 39;
LuaLexer.T__39 = 40;
LuaLexer.T__40 = 41;
LuaLexer.T__41 = 42;
LuaLexer.T__42 = 43;
LuaLexer.T__43 = 44;
LuaLexer.T__44 = 45;
LuaLexer.T__45 = 46;
LuaLexer.T__46 = 47;
LuaLexer.T__47 = 48;
LuaLexer.T__48 = 49;
LuaLexer.T__49 = 50;
LuaLexer.T__50 = 51;
LuaLexer.T__51 = 52;
LuaLexer.T__52 = 53;
LuaLexer.T__53 = 54;
LuaLexer.T__54 = 55;
LuaLexer.NAME = 56;
LuaLexer.NORMALSTRING = 57;
LuaLexer.CHARSTRING = 58;
LuaLexer.LONGSTRING = 59;
LuaLexer.INT = 60;
LuaLexer.HEX = 61;
LuaLexer.FLOAT = 62;
LuaLexer.HEX_FLOAT = 63;
LuaLexer.COMMENT = 64;
LuaLexer.LINE_COMMENT = 65;
LuaLexer.WS = 66;
LuaLexer.SHEBANG = 67;



